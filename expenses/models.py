from django.contrib.auth.models import User
from django.db import models



class Driver(models.Model):
    name = models.CharField("T√™n l√°i xe", max_length=100)
    user = models.OneToOneField(User, on_delete=models.CASCADE, null=True, blank=True)  # üîó li√™n k·∫øt User

    def __str__(self):
        return self.name

class Vehicle(models.Model):
    license_plate = models.CharField("Bi·ªÉn s·ªë", max_length=20)
    name = models.CharField("T√™n xe", max_length=100, blank=True)

    def __str__(self):
        return f"{self.license_plate} - {self.name}"
    
class DriverAssignment(models.Model):
    driver = models.ForeignKey(Driver, on_delete=models.CASCADE)
    vehicle = models.ForeignKey(Vehicle, on_delete=models.CASCADE)
    start_date = models.DateField("Ng√†y b·∫Øt ƒë·∫ßu √°p d·ª•ng")
    end_date = models.DateField("Ng√†y k·∫øt th√∫c √°p d·ª•ng", null=True, blank=True)

    class Meta:
        unique_together = ('driver', 'vehicle', 'start_date')  # Tr√°nh tr√πng l·ªãch

    def __str__(self):
        return f"{self.driver} -> {self.vehicle} ({self.start_date} - {self.end_date or 'hi·ªán t·∫°i'})"

class ExpenseEntry(models.Model):
    payer_type = models.CharField(
        "Th·ª±c hi·ªán",
        choices=[
            ('driver', 'L√°i xe'),
            ('company', 'C√¥ng ty'),
        ],
        max_length=10,
        blank=True,
        default='driver'  # ‚úÖ m·∫∑c ƒë·ªãnh l√† 'driver'
    )
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    date = models.DateField("Ng√†y")
    driver = models.ForeignKey(Driver, on_delete=models.SET_NULL, null=True, blank=True)
    vehicle = models.ForeignKey(Vehicle, on_delete=models.SET_NULL, null=True, blank=True)
    pickup_location = models.CharField("ƒêi·ªÉm nh·∫≠n h√†ng", max_length=100, blank=True)
    delivery_location = models.CharField("ƒêi·ªÉm giao h√†ng", max_length=100, blank=True)

    with_receipt_amount = models.PositiveIntegerField("C√≥ phi·∫øu (VNƒê)", null=True, blank=True)
    without_receipt_amount = models.PositiveIntegerField("Kh√¥ng phi·∫øu (VNƒê)", null=True, blank=True)
    
    cost_type = models.CharField("Lo·∫°i chi ph√≠", choices=[
        ('fuel', 'Nhi√™n li·ªáu'),
        ('fuel', 'L√†m h√†ng'),
        ('advance payment', '·ª®ng'),
        ('payment', 'Thu kh√°ch'),
        ('meal', 'Xe n√¢ng'),
        ('meal', 'B·ªëc x·∫øp'),
        ('other', 'Kh√°c'),
    ], max_length=20, blank=True)

    allowance = models.DecimalField(max_digits=12, decimal_places=0, default=0, null=True, blank=True)

    km_on_vehicle = models.IntegerField(default=0, blank=True)
    advance_or_customer_payment = models.DecimalField(max_digits=12, decimal_places=0,default=0, verbose_name="Thu kh√°ch / ·ª®ng ti·ªÅn")
    notes = models.TextField("Ghi ch√∫", blank=True)

    def __str__(self):
        return f"{self.date} - {self.pickup_location} ‚Üí {self.delivery_location}"


class ReceiptImage(models.Model):
    expense = models.ForeignKey(ExpenseEntry, on_delete=models.CASCADE, related_name='receipt_images')
    image = models.ImageField(upload_to='receipts/')


